{"version":3,"sources":["components/ImageGalleryItem/ItemGalleryItem.module.css","components/ImageGallery/ItemGallery.module.css","components/Button/Button.module.css","components/Loader/Loading.module.css","components/Container/Container.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","services/ImagesApi.js","components/Button/Button.js","components/Modal/Modal.js","helpers/toastWarn.js","App.js","reportWebVitals.js","index.js","components/Searchbar/Searchbar.module.css","components/Modal/Modal.module.css"],"names":["module","exports","Container","children","protoTypes","PropTypes","string","Searchbar","onSubmit","useState","inputValue","setInputValue","className","s","e","preventDefault","trim","toast","error","SearchForm","SearchForm_button","type","SearchForm_button_label","SearchForm_input","autoComplete","autoFocus","value","onChange","currentTarget","toLowerCase","placeholder","ItemGalleryItem","src","alt","dataSrc","onClick","ImageGalleryItem","ImageGalleryItem_image","ItemGallery","images","ImageGallery","map","id","webformatURL","largeImageURL","tags","api","fetchImages","query","page","fetch","then","res","json","Button","allyProps","modalRoot","document","querySelector","Modal","onClose","useEffect","window","addEventListener","handleKeyDowm","removeEventListener","code","createPortal","Overlay","target","ModalButton","ModalCloseIcon","toastWarn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","propTypes","App","imageGallery","setImageGallery","showModal","setShowModal","modalImg","setModalImg","modalAlt","setModalAlt","setPage","setError","status","setStatus","scrollTo","top","documentElement","scrollHeight","behavior","imagesApi","hits","length","prevState","toastWarm","catch","hundleFormSubmit","inputQuere","loader","color","height","width","imgForModal","dataset","altForModal","prevPage","message","theme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.83eb9e97.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ItemGalleryItem_ImageGalleryItem__6YW9F\",\"ImageGalleryItem_image\":\"ItemGalleryItem_ImageGalleryItem_image__3SR71\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ItemGallery_ImageGallery__3L-0J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__SEmgZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loading_loader__3j0UR\"};","import PropTypes from 'prop-types';\n\nexport default function Container({ children }) {\n  return <div>{children}</div>;\n}\nContainer.protoTypes = {\n  children: PropTypes.string,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ImSearch } from 'react-icons/im';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport s from './Searchbar.module.css';\n\nexport default function Searchbar({ onSubmit }) {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleNameChange = e =>\n    setInputValue(e.currentTarget.value.toLowerCase());\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (inputValue.trim() === '') {\n      return toast.error('Please enter your query!');\n    }\n\n    onSubmit(inputValue);\n    setInputValue('');\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form onSubmit={handleSubmit} className={s.SearchForm}>\n        <button className={s.SearchForm_button} type=\"submit\">\n          <ImSearch />\n          <span className={s.SearchForm_button_label}>Search</span>\n        </button>\n\n        <input\n          className={s.SearchForm_input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          value={inputValue}\n          onChange={handleNameChange}\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './ItemGalleryItem.module.css';\n\nexport default function ItemGalleryItem({ src, alt, dataSrc, onClick }) {\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        className={s.ImageGalleryItem_image}\n        src={src}\n        alt={alt}\n        data-src={dataSrc}\n        onClick={onClick}\n      />\n    </li>\n  );\n}\n\nItemGalleryItem.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  dataSrc: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ItemGalleryItem from '../ImageGalleryItem';\nimport s from './ItemGallery.module.css';\n\nexport default function ItemGallery({ images, onClick }) {\n  return (\n    <>\n      <ul className={s.ImageGallery}>\n        {images.map(({ id, webformatURL, largeImageURL, tags }) => {\n          return (\n            <ItemGalleryItem\n              key={id}\n              src={webformatURL}\n              alt={tags}\n              dataSrc={largeImageURL}\n              onClick={onClick}\n            />\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n\nItemGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n    }),\n  ),\n  onClick: PropTypes.func,\n};\n","function fetchImages(query, page) {\n  return fetch(\n    `https://pixabay.com/api/?q=${query}&page=${page}&key=23952211-93282d818c12dbc54947c6758&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(res => res.json());\n}\nconst api = { fetchImages };\nexport default api;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nconst Button = ({ onClick, ...allyProps }) => (\n  <button className={s.Button} type=\"button\" onClick={onClick} {...allyProps}>\n    Load more\n  </button>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { ImCross } from 'react-icons/im';\nimport s from './Modal.module.css';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ onClose, children }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDowm);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDowm);\n    };\n  });\n\n  const handleKeyDowm = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={s.Overlay} onClick={handleBackdropClick}>\n      <div className={s.Modal}>\n        {children}\n        <button type=\"button\" className={s.ModalButton}>\n          <ImCross className={s.ModalCloseIcon} onClick={onClose} />\n        </button>\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.object,\n};\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PropTypes from 'prop-types';\n\nexport default function toastWarn(inputValue) {\n  return toast.error(`We did not find ${inputValue}`, {\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n}\n\ntoastWarn.propTypes = {\n  inputValue: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Container from './components/Container';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport imagesApi from './services/ImagesApi';\nimport Button from './components/Button';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Modal from './components/Modal';\nimport toastWarm from './helpers/toastWarn';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport s from './components/Loader/Loading.module.css';\n\nexport default function App() {\n  const [inputValue, setInputValue] = useState('');\n  const [imageGallery, setImageGallery] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [modalImg, setModalImg] = useState('');\n  const [modalAlt, setModalAlt] = useState('');\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    if (page > 1) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n\n    if (!inputValue) {\n      setImageGallery([]);\n    }\n\n    if (!inputValue) {\n      return;\n    }\n\n    setStatus('pending');\n\n    imagesApi\n      .fetchImages(inputValue, page)\n      .then(({ hits }) => {\n        const images = hits.map(({ id, webformatURL, largeImageURL, tags }) => {\n          return { id, webformatURL, largeImageURL, tags };\n        });\n        if (images.length > 0) {\n          setImageGallery(prevState => [...prevState, ...images]);\n          setStatus('resolved');\n        } else {\n          toastWarm(inputValue);\n          setStatus('idle');\n        }\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('pending');\n      });\n  }, [page, inputValue]);\n\n  const hundleFormSubmit = inputQuere => {\n    if (inputQuere !== inputValue) {\n      setInputValue(inputQuere);\n      setPage(1);\n      setImageGallery([]);\n      setStatus('pending');\n    }\n  };\n\n  const handleClickButton = () => {\n    setPage(prevPage => prevPage + 1);\n    setStatus('pending');\n  };\n\n  const handleClickImg = e => {\n    const imgForModal = e.target.dataset.src;\n    const altForModal = e.target.alt;\n    setShowModal(true);\n    setModalImg(imgForModal);\n    setModalAlt(altForModal);\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  return (\n    <Container>\n      {status === 'idle' && <Searchbar onSubmit={hundleFormSubmit} />}\n      {status === 'pending' && (\n        <>\n          <Searchbar onSubmit={hundleFormSubmit} />\n          <ImageGallery images={imageGallery} />\n          {imageGallery.length > 0 && <ImageGallery images={imageGallery} />}\n          <Loader\n            className={s.loader}\n            type=\"ThreeDots\"\n            color=\"#00BFFF\"\n            height={80}\n            width={80}\n          />\n        </>\n      )}\n\n      {status === 'resolved' && (\n        <>\n          {showModal && (\n            <Modal onClose={toggleModal}>\n              <img src={modalImg} alt={modalAlt} />\n            </Modal>\n          )}\n          <Searchbar onSubmit={hundleFormSubmit} />\n          <ImageGallery onClick={handleClickImg} images={imageGallery} />\n          <Button onClick={handleClickButton} />\n        </>\n      )}\n\n      {status === 'rejected' && <h2>{error.message}</h2>}\n      <ToastContainer theme={'colored'} />\n    </Container>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3oieV\",\"SearchForm\":\"Searchbar_SearchForm__24D6j\",\"SearchForm_button\":\"Searchbar_SearchForm_button__35thz\",\"SearchForm_button_label\":\"Searchbar_SearchForm_button_label__3dAog\",\"SearchForm_input\":\"Searchbar_SearchForm_input__3yASJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__210YV\",\"Modal\":\"Modal_Modal__2Ibu2\",\"ModalButton\":\"Modal_ModalButton__2MGQz\",\"ModalCloseIcon\":\"Modal_ModalCloseIcon__150-o\"};"],"sourceRoot":""}